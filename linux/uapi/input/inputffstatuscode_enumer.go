// Code generated by "enumer -type=InputFFStatusCode"; DO NOT EDIT.

package input

import (
	"fmt"
	"strings"
)

const _InputFFStatusCodeName = "FF_STATUS_STOPPEDFF_STATUS_PLAYING"

var _InputFFStatusCodeIndex = [...]uint8{0, 17, 34}

const _InputFFStatusCodeLowerName = "ff_status_stoppedff_status_playing"

func (i InputFFStatusCode) String() string {
	if i >= InputFFStatusCode(len(_InputFFStatusCodeIndex)-1) {
		return fmt.Sprintf("InputFFStatusCode(%d)", i)
	}
	return _InputFFStatusCodeName[_InputFFStatusCodeIndex[i]:_InputFFStatusCodeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _InputFFStatusCodeNoOp() {
	var x [1]struct{}
	_ = x[FF_STATUS_STOPPED-(0)]
	_ = x[FF_STATUS_PLAYING-(1)]
}

var _InputFFStatusCodeValues = []InputFFStatusCode{FF_STATUS_STOPPED, FF_STATUS_PLAYING}

var _InputFFStatusCodeNameToValueMap = map[string]InputFFStatusCode{
	_InputFFStatusCodeName[0:17]:       FF_STATUS_STOPPED,
	_InputFFStatusCodeLowerName[0:17]:  FF_STATUS_STOPPED,
	_InputFFStatusCodeName[17:34]:      FF_STATUS_PLAYING,
	_InputFFStatusCodeLowerName[17:34]: FF_STATUS_PLAYING,
}

var _InputFFStatusCodeNames = []string{
	_InputFFStatusCodeName[0:17],
	_InputFFStatusCodeName[17:34],
}

// InputFFStatusCodeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func InputFFStatusCodeString(s string) (InputFFStatusCode, error) {
	if val, ok := _InputFFStatusCodeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _InputFFStatusCodeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to InputFFStatusCode values", s)
}

// InputFFStatusCodeValues returns all values of the enum
func InputFFStatusCodeValues() []InputFFStatusCode {
	return _InputFFStatusCodeValues
}

// InputFFStatusCodeStrings returns a slice of all String values of the enum
func InputFFStatusCodeStrings() []string {
	strs := make([]string, len(_InputFFStatusCodeNames))
	copy(strs, _InputFFStatusCodeNames)
	return strs
}

// IsAInputFFStatusCode returns "true" if the value is listed in the enum definition. "false" otherwise
func (i InputFFStatusCode) IsAInputFFStatusCode() bool {
	for _, v := range _InputFFStatusCodeValues {
		if i == v {
			return true
		}
	}
	return false
}
